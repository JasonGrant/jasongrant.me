import React, { useState, useCallback } from 'react'
import { Button, Skeleton } from '@radix-ui/themes';
import useEyeDropper from 'use-eye-dropper'

type DropperError = { 
    message: string
    canceled?: boolean
}
interface ColorPickerProps {
    onChange?: (color: string) => void;
}

const ColorPicker: React.FC<ColorPickerProps> = ({ onChange }) => {
    const isError = <T, >(err: DropperError | T): err is DropperError => 
        !!err && err instanceof Error && !!err.message

    const isNotCanceled = <T, >(err: DropperError | T): err is DropperError =>
        isError(err) && !err.canceled
    
    const { open, close, isSupported } = useEyeDropper()
    const [color, setColor] = useState('#fff')
    const [error, setError] = useState<DropperError | null>(null)
    
    const pickColor = useCallback(() => {
        const openPicker = async () => {
            try {
                const color = await open()
                console.log(color)
                setColor(color.sRGBHex)
                if (onChange) onChange(color.sRGBHex)
            } catch (e) {
                console.log(e)
                if (isError(e) && !e.canceled) setError(e)
            }
        }
        openPicker()
    }, [open, onChange])
    
    return (
        <>
            {isSupported() ?
                <Button onClick={pickColor} variant="surface" color="gray" style={{ width: 40, height: 40, padding: 8 }}>
                    <svg width="100%" height="100%" viewBox="0 0 36 36" fill="var(--accent-a11)" xmlns="http://www.w3.org/2000/svg">
                        <path d="M32.3852 2.63497C32.2292 2.03281 31.9184 1.49572 31.4613 1.03867C31.0042 0.581613 30.4672 0.270794 29.8651 0.11482C29.3389 -0.021478 28.7753 -0.0365107 28.1899 0.0701488C27.2155 0.24768 26.2233 0.764189 25.5357 1.45178L21.3046 5.68267C20.9486 5.48421 20.5514 5.39532 20.1447 5.42847C19.6128 5.47189 19.0984 5.71731 18.6962 6.11945C18.0444 6.77123 17.7572 7.80085 18.2784 8.70904L7.49048 19.497C6.69861 20.2887 5.81537 21.38 6.01571 22.8038C6.08224 23.2767 5.92496 23.6161 5.39227 24.1489L4.33816 25.2029C4.03748 25.5036 3.65421 25.9896 3.53611 26.5971C3.44792 27.0507 3.47859 27.7271 4.12505 28.3739C4.6134 28.8622 5.11914 29 5.53263 29C5.66694 29 5.79155 28.9855 5.90283 28.9639C6.51036 28.8458 6.99628 28.4625 7.29703 28.1618C7.73765 27.7211 8.03876 27.42 8.35113 27.1078C8.88373 26.5751 9.22316 26.4177 9.69635 26.4843C11.1198 26.6846 12.2112 25.8013 13.0031 25.0096L23.793 14.2196C24.1053 14.3969 24.4474 14.49 24.798 14.49C24.8468 14.49 24.8958 14.4883 24.9449 14.4846C25.4704 14.4458 25.9803 14.204 26.3805 13.8037C26.7827 13.4016 27.0281 12.8872 27.0715 12.3552C27.1047 11.9487 27.0157 11.5514 26.8172 11.1953L31.0482 6.96437C31.7358 6.27675 32.2523 5.28449 32.4298 4.31015C32.5365 3.72481 32.5215 3.16119 32.3852 2.63497ZM12.1158 24.1222C11.2221 25.0159 10.5718 25.3403 9.87117 25.2416C8.76746 25.0864 8.03492 25.6493 7.46395 26.2203C7.15162 26.5326 6.85044 26.8337 6.40972 27.2745C6.15964 27.5246 5.89464 27.6871 5.66348 27.7321C5.5054 27.7627 5.28859 27.7627 5.01291 27.487C4.86617 27.3403 4.42126 26.8944 5.22545 26.0902L6.27957 25.0361C6.85072 24.4649 7.41363 23.7322 7.25828 22.6288C7.15968 21.928 7.48398 21.2778 8.37771 20.3842L19.1089 9.65297L20.9777 11.5216L22.8471 13.391L12.1158 24.1222ZM25.4933 12.9164C25.3085 13.1013 25.0749 13.2168 24.8526 13.2332C24.6126 13.2511 24.3854 13.1548 24.178 12.9474L21.8653 10.6347L19.5528 8.32241C18.9418 7.71113 19.4711 7.11911 19.5835 7.00676C19.8419 6.74836 20.4145 6.4463 20.9214 6.95313L23.2341 9.26598L25.5469 11.5786C26.0538 12.0855 25.7517 12.6581 25.4933 12.9164Z" />
                        <path d="M5.84916 29.1841C5.84665 29.1809 5.84404 29.178 5.8415 29.1749C5.8379 29.1705 5.83439 29.166 5.83073 29.1618C5.82874 29.1595 5.82668 29.1574 5.82467 29.1552C5.82032 29.1504 5.81603 29.1455 5.81165 29.1409C5.80952 29.1387 5.80728 29.1367 5.80515 29.1345C5.80077 29.1301 5.79642 29.1257 5.79196 29.1215C5.79008 29.1198 5.78818 29.1181 5.78631 29.1165C5.78145 29.1121 5.77663 29.1076 5.77169 29.1035C5.76487 29.0978 5.75792 29.0922 5.75091 29.087C5.74423 29.082 5.73748 29.0772 5.73068 29.0726L5.72964 29.0719C5.54522 28.9485 5.3125 28.984 5.1558 29.1781C5.15416 29.1801 5.15244 29.182 5.1508 29.1841C4.04 30.599 3.5 31.9634 3.5 33.3554C3.5 34.1255 3.7474 34.8272 4.1967 35.331C4.57013 35.7499 5.05735 36 5.49997 36C5.94261 36 6.42983 35.7499 6.8033 35.331C7.25258 34.8272 7.5 34.1255 7.5 33.3554C7.50004 31.9634 6.96004 30.5989 5.84916 29.1841Z" />
                    </svg>
                </Button>
                : <Skeleton width="40px" height="40px">Loading</Skeleton>
            }
            {!!error}
            {/* {!!error && <div>{error.message}</div>} */}
        </>
    )
}

export default ColorPicker;
